{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This is the infrastructure (sans DynamoDB) for enjmabre.",
    "Resources": {
        "robotsRoleDDB": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "robotsRoleDDBPolicy",
                        "PolicyDocument": {
                                "Version": "2012-10-17",
                                "Statement": [
                                    {
                                        "Effect": "Allow",
                                        "Action": "dynamodb:*",
                                        "Resource": "*"
                                    }
                                ]
                        }
                    }
                ],
                "Description": "IAM role for Lambda functions to interact with DDB.",
                "RoleName": "robotsRoleDDB"
            }
        },
        "apigwRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "api_robots",
                "Description": "API to update and delete from DDB table.",
                "Parameters": {
                    "endpointConfigurationTypes": "REGIONAL"
                }
            }
        },
        "apigwRootMethodPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "POST",
                "OperationName": "POST Robots",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Sub": [ 
                            "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations",
                            {
                                "lambdaArn": {
                                    "Fn::GetAtt": [
                                        "robotsPostRobotslambda",
                                        "Arn"
                                    ]
                                }
                            }
                        ]
                    },
                    "IntegrationResponses": [
                        {
                            "StatusCode": 200,
                            "ResponseTemplates": {
                                "application/json": ""
                            }
                        }
                    ]
                },
                "MethodResponses": [
                    {
                        "StatusCode": 200,
                        "ResponseModels": {
                            "application/json": "Empty"
                        }
                    }
                ],
                "ResourceId": {
                    "Fn::GetAtt": [
                        "apigwRestApi", "RootResourceId"
                    ]
                },
                "RestApiId": {
                    "Ref": "apigwRestApi"
                }
            }
        },
        "apigwRootMethodGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "GET",
                "OperationName": "GET Robots",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Sub": [ 
                            "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations",
                            {
                                "lambdaArn": {
                                    "Fn::GetAtt": [
                                        "robotsGetRobotslambda",
                                        "Arn"
                                    ]
                                }
                            }
                        ]
                    },
                    "IntegrationResponses": [
                        {
                            "StatusCode": 200,
                            "ResponseTemplates": {
                                "application/json": ""
                            }
                        }
                    ]
                },
                "MethodResponses": [
                    {
                        "StatusCode": 200,
                        "ResponseModels": {
                            "application/json": "Empty"
                        }
                    }
                ],
                "ResourceId": {
                    "Fn::GetAtt": [
                        "apigwRestApi", "RootResourceId"
                    ]
                },
                "RestApiId": {
                    "Ref": "apigwRestApi"
                }
            }
        },
        "robotsPostRobotslambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "ZipFile": "def handler(event, context): \n pass \n"
                },
                "Description": "Function to POST objects to robots table.",
                "FunctionName": "robotsPostRobotslambda",
                "Handler": "lambda_post_robots.lambda_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "robotsRoleDDB",
                        "Arn"
                    ]
                },
                "Runtime": "python3.7"
            }
        },
        "robotsPostRobotslambdaPerm": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "robotsPostRobotslambda",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${apigwRestApi}/*/POST/"
                }
            }
        },
        "robotsGetRobotslambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "ZipFile": "def handler(event, context): \n pass \n"
                },
                "Description": "Function to GET objects to robots table.",
                "FunctionName": "robotsGetRobotslambda",
                "Handler": "lambda_get_robots.lambda_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "robotsRoleDDB",
                        "Arn"
                    ]
                },
                "Runtime": "python3.7"
            }
        },
        "robotsGetRobotslambdaPerm": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "robotsGetRobotslambda",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${apigwRestApi}/*/GET/"
                }
            }
        },
        "apigwRestApiDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "DependsOn": [
                "apigwRootMethodPost",
                "apigwRootMethodGet"
            ],
            "Properties": {
                "Description": "Deployed PUBLIC api endpoint.",
                "RestApiId": {
                    "Ref": "apigwRestApi"
                },
                "StageName": "BETA"
            }
        },
        "apigwRestApiStage": {
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
                "StageName": "PROD",
                "Description": "Prod Stage",
                "RestApiId": {
                    "Ref": "apigwRestApi"
                },
                "DeploymentId": {
                    "Ref": "apigwRestApiDeployment"
                },
                "MethodSettings": [
                    {
                        "ResourcePath": "/",
                        "HttpMethod": "POST"
                    },
                    {
                        "ResourcePath": "/",
                        "HttpMethod": "GET"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "MyApiEndpoint": {
            "Value": {
                "Fn::Sub": "https://${apigwRestApi}.execute-api.${AWS::Region}.amazonaws.com/BETA" 
            }
        }
    }
}